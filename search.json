[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WS 23/24 Numerics Notes",
    "section": "",
    "text": "Preface\nNotes for the lecture “WS 23/24 Numerics 0” at Uni Heidelberg."
  },
  {
    "objectID": "floating/floating.html#ansiieee-64-bit",
    "href": "floating/floating.html#ansiieee-64-bit",
    "title": "1  Floating Point Numbers",
    "section": "1.1 ANSI/IEEE 64 Bit",
    "text": "1.1 ANSI/IEEE 64 Bit\nLet \\(\\tilde{a}\\) be a 64 bit IEEE floating point number. \\(\\tilde{a}\\) is represented as\nS E ... E M ... M \nWhere S is the sign bit, 11 E’s are the exponent bits and 52 M’s are mantissa bits. Interpretation (Case analysis on value of \\(E\\)):\n\nS | 0 … 0 | M:\n\n\\(M = 0 \\Rightarrow \\tilde{a} = (-1)^{S} 0\\)\n\\(M \\neq 0 \\Rightarrow \\tilde{a} = (-1)^S \\times 2^{-1022}\\times 0.M\\) (subnormal range)\n\n\\(1 \\leq E \\leq 2046 \\Rightarrow \\tilde{a} = (-1)^S \\times 2^{E - 1023} \\times 1.M\\) (normal range)\nS | 1 … 1 | M:\n\n\\(M = 0 \\Rightarrow \\tilde{a} = (-1)^{S} \\texttt{inf}\\)\n\\(M \\neq 0 \\Rightarrow \\tilde{a} = \\texttt{NaN}\\text{(Not a Number)}\\) (exceptions)\n\n\nSee Figure 1.1 for a visual summary.\n\n\n\nFigure 1.1: floating-point\n\n\nExamples:\n\nrealmin: smallest normalized positive machine number in FP64 = \\([\\![\\texttt{0|0 ... 01|0 ... 0}]\\!]_{FP64} = 2^{1 - 1023} \\times 1.0 = 2^{-1022}\\)\nrealmax: greatest normalized machine number in FP64 = \\([\\texttt{0|1...10|1...1}]_{\\texttt{FP64}} \\approx 1.7977\\text{E}308\\)\n\\(1 = 2^0 \\times 1.0 = 2^{1023 - 1023} \\times 1.0 = [\\texttt{0|01...1|0...0}]_{\\texttt{FP64}}\\)\neps: spacing in the interval \\((1, 2)\\). Note that the spacing is constant for each such interval, but grows as we go further down the number line. That is, the spacing in \\((1000, 1001)\\) is constant, but larger.\nnumber right after 1: \\([\\texttt{0|01...1|0...1}]_{\\texttt{FP64}}\\). Then the spacing, i.e. eps from above is \\(2^{-52}\\)"
  }
]